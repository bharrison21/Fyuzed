#Web scraping algorithm to get all of the course info 
import requests 
from bs4 import BeautifulSoup
import selenium
from selenium.webdriver.support.ui import Select
from selenium import webdriver
import os 

class CourseGuide:

#driver is the site, dropdown_name is the name of the dropdown menu

    def __init__(self, driver, dropdown_name):

        self.driver=driver 
        self.dropdown_name=dropdown_name
        self.dropdown=driver.find_element_by_name(dropdown_name)

#click on each dropdown menu on the course and have it filter through every possible selection

    def select (self, value):

        self.dropdown.click()
        try:
            self.driver.find_element_by_xpath("//select[@name='{}}']/option[text()='{}']".format(self.dropdown_name, value)).click()
        except:
            print (("value {} is not selectable in dropdown {}").format(value, self.dropdown_name))

        return self

#return the selected drop down menu option

    def get_selected(self):

        return str(self.driver.find_element_by_xpath("//select[@name='{}']/option[@selected]".format(self.dropdown_name)).text)

#Make sure the selected value equals the value we pass in

    def is_selected(self, value):

        return value==self.get_selected()

#Return a list of all the available values that the dropdown has in the order that they appear in the dropdown

    def get_available_selections(self):
        
        data=[]
        xpath="//select[@name='{}']/option".format(self.dropdown_name)
        count=len(self.driver.find_elements_by_xpath(xpath))
        for index in range (1, count + 1):
            data.append((self.driver.find_element_by_xpath("{}:[{}]").format(xpath,index).text))
        return data

if __name__ == "__main__":
    driver = webdriver.Chrome()
    driver.get("https://webapps.lsa.umich.edu/CrsMaint/Public/CB_PublicBulletin.aspx?crselevel=ug/robots.txt")
    
    term=CourseGuide(driver, "ctl00$ContentPlaceHolder1$ddlTerm")
    requirement=CourseGuide(driver, "ctl00$ContentPlaceHolder1$ddlAttr")
    subject=CourseGuide(driver, "ctl00$ContentPlaceHolder1$ddlSubject")
    department=CourseGuide(driver, "ctl00$ContentPlaceHolder1$ddlDept")
    listing=CourseGuide(driver, "ctl00$ContentPlaceHolder1$ddlPage")

    dropdowns=[term, requirement, subject, department, listing]
    for dropdown in dropdowns:
        print (dropdown.get_selected())
        print (dropdown.is_selected(1))
        print (dropdown.get_available_selections)
        dropdown.select("2")







